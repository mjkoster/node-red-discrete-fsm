[
    {
        "id": "017d1a8bd227e961",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f0dbdebbe746594b",
        "type": "junction",
        "z": "017d1a8bd227e961",
        "x": 200,
        "y": 440,
        "wires": [
            [
                "f66731929b3ca207",
                "b278c9db0b94f1a0",
                "28cfdd2efa43fed2"
            ]
        ]
    },
    {
        "id": "ca8c31bac1649e08",
        "type": "junction",
        "z": "017d1a8bd227e961",
        "x": 400,
        "y": 440,
        "wires": [
            [
                "e7f6bfaab51285c4",
                "38a2568eb6f345f6",
                "22111660ecc52b80",
                "2b81165312283f24"
            ]
        ]
    },
    {
        "id": "7e020b4d71394a46",
        "type": "junction",
        "z": "017d1a8bd227e961",
        "x": 600,
        "y": 440,
        "wires": [
            [
                "49548723f3c70647",
                "9a115ec06d556a5b",
                "aa7c155cb3035c5a",
                "ca8c31bac1649e08",
                "12727a0bc506023b"
            ]
        ]
    },
    {
        "id": "de072e966b057ce0",
        "type": "function",
        "z": "017d1a8bd227e961",
        "name": "In_1",
        "func": "context.value = msg.payload;\nflow.set(node.name, context.value);\nmsg.topic = \"input\";\nmsg.payload = {};\nmsg.payload[node.name] = context.value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.initialValue = 0;\nflow.set(node.name, context.initialValue);",
        "finalize": "",
        "libs": [],
        "x": 110,
        "y": 360,
        "wires": [
            [
                "f0dbdebbe746594b"
            ]
        ],
        "icon": "font-awesome/fa-sign-in"
    },
    {
        "id": "b4fbc529b6ac2949",
        "type": "function",
        "z": "017d1a8bd227e961",
        "name": "In_2",
        "func": "context.value = msg.payload;\nflow.set(node.name, context.value);\nmsg.topic = \"input\";\nmsg.payload = {};\nmsg.payload[node.name] = context.value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.initialValue = 0;\nflow.set(node.name, context.initialValue);",
        "finalize": "",
        "libs": [],
        "x": 110,
        "y": 400,
        "wires": [
            [
                "f0dbdebbe746594b"
            ]
        ],
        "icon": "font-awesome/fa-sign-in"
    },
    {
        "id": "7342955d4f8bf298",
        "type": "function",
        "z": "017d1a8bd227e961",
        "name": "In_3",
        "func": "context.value = msg.payload;\nflow.set(node.name, context.value);\nmsg.topic = \"input\";\nmsg.payload = {};\nmsg.payload[node.name] = context.value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.initialValue = 0;\nflow.set(node.name, context.initialValue);",
        "finalize": "",
        "libs": [],
        "x": 110,
        "y": 440,
        "wires": [
            [
                "f0dbdebbe746594b"
            ]
        ],
        "icon": "font-awesome/fa-sign-in"
    },
    {
        "id": "f66731929b3ca207",
        "type": "function",
        "z": "017d1a8bd227e961",
        "name": "Cond_1",
        "func": "if (msg.topic == \"input\" && eval(context.condition)) {\n  msg.topic = \"condition\";\n  msg.payload = node.name;\n  return msg; \n  }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.condition = \"flow.get('In_1')==1 && flow.get('In_2')==1 && flow.get('In_3')==0\";\n",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 400,
        "wires": [
            [
                "ca8c31bac1649e08"
            ]
        ],
        "icon": "font-awesome/fa-filter"
    },
    {
        "id": "38a2568eb6f345f6",
        "type": "function",
        "z": "017d1a8bd227e961",
        "name": "State_1",
        "func": "if (msg.topic == \"input\") {\n    for (var condition in context.condition) {\n        if (eval(context.condition[condition])) {\n            msg.topic = \"condition\";\n            msg.payload = condition;\n            return msg;\n        }\n    } \n}\nif (msg.topic == \"condition\" && flow.get(\"state\") == node.name) {\n    if (msg.payload in context.transition) {\n        msg.topic = \"transition\";\n        msg.payload = context.transition[msg.payload];\n        return msg;\n    }\n}\nif (msg.topic == \"transition\" && msg.payload == node.name) {\n    flow.set(\"state\", node.name);\n    flow.set(\"output\", context.output);\n    msg.topic = \"output\";\n    msg.payload = context.output;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.initialState = false;\nif (context.initialState) {\n    flow.set(\"state\", node.name);\n}\ncontext.output = {\n    \"Out_1\": 0,\n    \"Out_2\": 0,\n    \"Out_3\": 1\n}\ncontext.condition = {\n    \"Cond_1\": \"flow.get('In_1')==1 && flow.get('In_2')==1 && flow.get('In_3')==0\",\n    \"Cond_2\": \"flow.get('In_3')==1\"\n}\ncontext.transition = {\n    \"Cond_1\": \"State_2\",\n    \"Cond_2\": \"State_3\"\n}\ncontext.output = {\n    \"Out_1\": 0,\n    \"Out_2\": 0,\n    \"Out_3\": 1\n}",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 360,
        "wires": [
            [
                "7e020b4d71394a46"
            ]
        ],
        "icon": "font-awesome/fa-cogs"
    },
    {
        "id": "49548723f3c70647",
        "type": "function",
        "z": "017d1a8bd227e961",
        "name": "Out_1",
        "func": "if (msg.topic == \"output\" && node.name in msg.payload) {\n    context.value = msg.payload[node.name];\n    msg.payload = context.value;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 360,
        "wires": [
            [
                "efc94ca0d780ef98"
            ]
        ],
        "icon": "font-awesome/fa-sign-out"
    },
    {
        "id": "9a115ec06d556a5b",
        "type": "function",
        "z": "017d1a8bd227e961",
        "name": "Out_2",
        "func": "if (msg.topic == \"output\" && node.name in msg.payload) {\n    context.value = msg.payload[node.name];\n    msg.payload = context.value;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 400,
        "wires": [
            [
                "efc94ca0d780ef98"
            ]
        ],
        "icon": "font-awesome/fa-sign-out"
    },
    {
        "id": "aa7c155cb3035c5a",
        "type": "function",
        "z": "017d1a8bd227e961",
        "name": "Out_3",
        "func": "if (msg.topic == \"output\" && node.name in msg.payload) {\n    context.value = msg.payload[node.name];\n    msg.payload = context.value;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 440,
        "wires": [
            [
                "efc94ca0d780ef98"
            ]
        ],
        "icon": "font-awesome/fa-sign-out"
    },
    {
        "id": "b278c9db0b94f1a0",
        "type": "function",
        "z": "017d1a8bd227e961",
        "name": "Cond_2",
        "func": "if (msg.topic == \"input\" && eval(context.condition)) {\n    msg.topic = \"condition\";\n    msg.payload = node.name;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.condition = \"flow.get('In_3')==1\";\n",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 440,
        "wires": [
            [
                "ca8c31bac1649e08"
            ]
        ],
        "icon": "font-awesome/fa-filter"
    },
    {
        "id": "e7f6bfaab51285c4",
        "type": "function",
        "z": "017d1a8bd227e961",
        "name": "State_2",
        "func": "if (msg.topic == \"condition\" && flow.get(\"state\") == node.name) {\n    if (msg.payload in context.transition) {\n        msg.topic = \"transition\";\n        msg.payload = context.transition[msg.payload];\n        return msg;\n    }\n}\nif (msg.topic == \"transition\" && msg.payload == node.name) {\n    flow.set(\"state\", node.name);\n    flow.set(\"output\", context.output);\n    msg.topic = \"output\";\n    msg.payload = context.output;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.initialState = false;\nif (context.initialState) {\n    flow.set(\"state\", node.name);\n}\ncontext.transition = {\n    \"Cond_1\": \"State_1\",\n    \"Cond_2\": \"State_3\"\n}\ncontext.output = {\n    \"Out_1\": 0,\n    \"Out_2\": 1,\n    \"Out_3\": 0\n}",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 400,
        "wires": [
            [
                "7e020b4d71394a46"
            ]
        ],
        "icon": "font-awesome/fa-cogs"
    },
    {
        "id": "22111660ecc52b80",
        "type": "function",
        "z": "017d1a8bd227e961",
        "name": "State_3",
        "func": "if (msg.topic == \"condition\" && flow.get(\"state\") == node.name) {\n    if (msg.payload in context.transition) {\n        msg.topic = \"transition\";\n        msg.payload = context.transition[msg.payload];\n        return msg;\n    }\n}\nif (msg.topic == \"transition\" && msg.payload == node.name) {\n    flow.set(\"state\", node.name);\n    flow.set(\"output\", context.output);\n    msg.topic = \"output\";\n    msg.payload = context.output;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.initialState = true;\nif (context.initialState) {\n    flow.set(\"state\", node.name);\n}\ncontext.transition = {\n    \"Cond_1\": \"State_1\",\n    \"Cond_2\": \"State_3\"\n}\ncontext.output = {\n    \"Out_1\": 1,\n    \"Out_2\": 0,\n    \"Out_3\": 0\n}",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 440,
        "wires": [
            [
                "7e020b4d71394a46"
            ]
        ],
        "icon": "font-awesome/fa-cogs"
    },
    {
        "id": "33f31dd6b6b17d95",
        "type": "comment",
        "z": "017d1a8bd227e961",
        "name": "State Transitions",
        "info": "",
        "x": 500,
        "y": 500,
        "wires": []
    },
    {
        "id": "a518a963d7b769de",
        "type": "comment",
        "z": "017d1a8bd227e961",
        "name": "Inputs",
        "info": "",
        "x": 110,
        "y": 500,
        "wires": []
    },
    {
        "id": "847ff56e23c8fd86",
        "type": "comment",
        "z": "017d1a8bd227e961",
        "name": "Conditions",
        "info": "",
        "x": 300,
        "y": 500,
        "wires": []
    },
    {
        "id": "f4b7893fcacaabe8",
        "type": "comment",
        "z": "017d1a8bd227e961",
        "name": "Outputs",
        "info": "",
        "x": 690,
        "y": 500,
        "wires": []
    },
    {
        "id": "f40afcab3e042f30",
        "type": "inject",
        "z": "017d1a8bd227e961",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "input",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 260,
        "wires": [
            [
                "7342955d4f8bf298"
            ]
        ]
    },
    {
        "id": "7426d20190263dea",
        "type": "inject",
        "z": "017d1a8bd227e961",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "input",
        "payload": "0",
        "payloadType": "num",
        "x": 90,
        "y": 300,
        "wires": [
            [
                "7342955d4f8bf298"
            ]
        ]
    },
    {
        "id": "a9bd3d4baaad8283",
        "type": "inject",
        "z": "017d1a8bd227e961",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "input",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "de072e966b057ce0"
            ]
        ]
    },
    {
        "id": "f9457decb82b06af",
        "type": "inject",
        "z": "017d1a8bd227e961",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "input",
        "payload": "0",
        "payloadType": "num",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "de072e966b057ce0"
            ]
        ]
    },
    {
        "id": "8aeea13df3f80ed4",
        "type": "inject",
        "z": "017d1a8bd227e961",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "input",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 180,
        "wires": [
            [
                "b4fbc529b6ac2949"
            ]
        ]
    },
    {
        "id": "ad941eccd8826a1c",
        "type": "inject",
        "z": "017d1a8bd227e961",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "input",
        "payload": "0",
        "payloadType": "num",
        "x": 90,
        "y": 220,
        "wires": [
            [
                "b4fbc529b6ac2949"
            ]
        ]
    },
    {
        "id": "28cfdd2efa43fed2",
        "type": "debug",
        "z": "017d1a8bd227e961",
        "name": "cond in",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 220,
        "wires": []
    },
    {
        "id": "2b81165312283f24",
        "type": "debug",
        "z": "017d1a8bd227e961",
        "name": "state in",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 280,
        "wires": []
    },
    {
        "id": "12727a0bc506023b",
        "type": "debug",
        "z": "017d1a8bd227e961",
        "name": "state out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 280,
        "wires": []
    },
    {
        "id": "efc94ca0d780ef98",
        "type": "debug",
        "z": "017d1a8bd227e961",
        "name": "outputs",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 280,
        "wires": []
    }
]