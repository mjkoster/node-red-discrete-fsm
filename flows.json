[
    {
        "id": "da1da3acd2b01b0a",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3dcddec6b3706966",
        "type": "junction",
        "z": "da1da3acd2b01b0a",
        "x": 320,
        "y": 440,
        "wires": [
            [
                "d1174de12deed6a7",
                "4d64249f04560b23",
                "412cd87458afe32b"
            ]
        ]
    },
    {
        "id": "e1c80ca37b747f75",
        "type": "junction",
        "z": "da1da3acd2b01b0a",
        "x": 520,
        "y": 440,
        "wires": [
            [
                "594d78093e83adf9",
                "117b647b4fd5038d",
                "7377714dae89dd97",
                "480b1bdc2f726bf0"
            ]
        ]
    },
    {
        "id": "6a64198002e53a9c",
        "type": "junction",
        "z": "da1da3acd2b01b0a",
        "x": 720,
        "y": 440,
        "wires": [
            [
                "115cef04de54266d",
                "60405cc8e84a2540",
                "8f9ee785ca70810c",
                "e1c80ca37b747f75",
                "5089e97d12b9244a"
            ]
        ]
    },
    {
        "id": "7d52ab25d3c33d71",
        "type": "function",
        "z": "da1da3acd2b01b0a",
        "name": "In_1",
        "func": "context.value = msg.payload;\nflow.set(node.name, context.value);\nmsg.topic = \"input\";\nmsg.payload = {};\nmsg.payload[node.name] = context.value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.initialValue = 0;\nflow.set(node.name, context.initialValue);",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 360,
        "wires": [
            [
                "3dcddec6b3706966"
            ]
        ]
    },
    {
        "id": "579946f2235cdbcd",
        "type": "function",
        "z": "da1da3acd2b01b0a",
        "name": "In_2",
        "func": "context.value = msg.payload;\nflow.set(node.name, context.value);\nmsg.topic = \"input\";\nmsg.payload = {};\nmsg.payload[node.name] = context.value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.initialValue = 0;\nflow.set(node.name, context.initialValue);",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 400,
        "wires": [
            [
                "3dcddec6b3706966"
            ]
        ]
    },
    {
        "id": "8b2f203309471ee9",
        "type": "function",
        "z": "da1da3acd2b01b0a",
        "name": "In_3",
        "func": "context.value = msg.payload;\nflow.set(node.name, context.value);\nmsg.topic = \"input\";\nmsg.payload = {};\nmsg.payload[node.name] = context.value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.initialValue = 0;\nflow.set(node.name, context.initialValue);",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 440,
        "wires": [
            [
                "3dcddec6b3706966"
            ]
        ]
    },
    {
        "id": "d1174de12deed6a7",
        "type": "function",
        "z": "da1da3acd2b01b0a",
        "name": "Cond_1",
        "func": "if (msg.topic == \"input\" && eval(context.condition)) {\n  msg.topic = \"condition\";\n  msg.payload = node.name;\n  return msg; \n  }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.condition = \"flow.get('In_1')==1 && flow.get('In_2')==1 && flow.get('In_3')==0\";\n",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 400,
        "wires": [
            [
                "e1c80ca37b747f75"
            ]
        ]
    },
    {
        "id": "117b647b4fd5038d",
        "type": "function",
        "z": "da1da3acd2b01b0a",
        "name": "State_1",
        "func": "if (msg.topic == \"condition\" && flow.state == node.name) {\n    if (msg.payload in context.transitions) {\n        msg.topic = \"transition\";\n        msg.payload = context.transitions[msg.payload];\n        return msg;\n    }\n}\nif (msg.topic == \"transition\" && msg.payload == node.name) {\n    flow.state = node.name;\n    flow.outputs = context.outputs;\n    msg.topic = \"output\";\n    msg.payload = context.outputs;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.initialState = true;\nif (context.initialState) {\n    flow.set(\"state\", node.name);\n}\ncontext.transitions = {\n    \"Cond_1\": \"State_2\",\n    \"Cond_2\": \"State_3\"\n}\ncontext.outputs = {\n    \"Out_1\": 0,\n    \"Out_2\": 0,\n    \"Out_3\": 1\n}",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 360,
        "wires": [
            [
                "6a64198002e53a9c"
            ]
        ]
    },
    {
        "id": "115cef04de54266d",
        "type": "function",
        "z": "da1da3acd2b01b0a",
        "name": "Out_1",
        "func": "if (msg.topic == \"output\" && node.name in msg.payload) {\n    context.value = msg.payload[node.name];\n    msg.payload = context.value;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 360,
        "wires": [
            [
                "9dbe8f06056e966e"
            ]
        ]
    },
    {
        "id": "60405cc8e84a2540",
        "type": "function",
        "z": "da1da3acd2b01b0a",
        "name": "Out_2",
        "func": "if (msg.topic == \"output\" && node.name in msg.payload) {\n    context.value = msg.payload[node.name];\n    msg.payload = context.value;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 400,
        "wires": [
            [
                "9dbe8f06056e966e"
            ]
        ]
    },
    {
        "id": "8f9ee785ca70810c",
        "type": "function",
        "z": "da1da3acd2b01b0a",
        "name": "Out_3",
        "func": "if (msg.topic == \"output\" && node.name in msg.payload) {\n    context.value = msg.payload[node.name];\n    msg.payload = context.value;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 440,
        "wires": [
            [
                "9dbe8f06056e966e"
            ]
        ]
    },
    {
        "id": "4d64249f04560b23",
        "type": "function",
        "z": "da1da3acd2b01b0a",
        "name": "Cond_2",
        "func": "if (msg.topic == \"input\" && eval(context.condition)) {\n    msg.topic = \"condition\";\n    msg.payload = node.name;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.condition = \"flow.get('In_3')==1\";\n",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 440,
        "wires": [
            [
                "e1c80ca37b747f75"
            ]
        ]
    },
    {
        "id": "594d78093e83adf9",
        "type": "function",
        "z": "da1da3acd2b01b0a",
        "name": "State_2",
        "func": "if (msg.topic == \"condition\" && flow.state == node.name) {\n    if (msg.payload in context.transitions) {\n        msg.topic = \"transition\";\n        msg.payload = context.transitions[msg.payload];\n        return msg;\n    }\n}\nif (msg.topic == \"transition\" && msg.payload == node.name) {\n    flow.state = node.name;\n    flow.outputs = context.outputs;\n    msg.topic = \"output\";\n    msg.payload = context.outputs;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.initialState = false;\nif (context.initialState) {\n    flow.set(\"state\", node.name);\n}\ncontext.transitions = {\n    \"Cond_1\": \"State_1\",\n    \"Cond_2\": \"State_3\"\n}\ncontext.outputs = {\n    \"Out_1\": 0,\n    \"Out_2\": 1,\n    \"Out_3\": 0\n}",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 400,
        "wires": [
            [
                "6a64198002e53a9c"
            ]
        ]
    },
    {
        "id": "7377714dae89dd97",
        "type": "function",
        "z": "da1da3acd2b01b0a",
        "name": "State_3",
        "func": "if (msg.topic == \"condition\" && flow.state == node.name) {\n    if (msg.payload in context.transitions) {\n        msg.topic = \"transition\";\n        msg.payload = context.transitions[msg.payload];\n        return msg;\n    }\n}\nif (msg.topic == \"transition\" && msg.payload == node.name) {\n    flow.state = node.name;\n    flow.outputs = context.outputs;\n    msg.topic = \"output\";\n    msg.payload = context.outputs;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.initialState = false;\nif (context.initialState) {\n    flow.set(\"state\", node.name);\n}\ncontext.transitions = {\n    \"Cond_1\": \"State_1\",\n    \"Cond_2\": \"State_3\"\n}\ncontext.outputs = {\n    \"Out_1\": 1,\n    \"Out_2\": 0,\n    \"Out_3\": 0\n}",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 440,
        "wires": [
            [
                "6a64198002e53a9c"
            ]
        ]
    },
    {
        "id": "e8785ee63bea8d04",
        "type": "comment",
        "z": "da1da3acd2b01b0a",
        "name": "State Transitions",
        "info": "",
        "x": 620,
        "y": 500,
        "wires": []
    },
    {
        "id": "1ab28ff2f5bda250",
        "type": "comment",
        "z": "da1da3acd2b01b0a",
        "name": "Inputs",
        "info": "",
        "x": 230,
        "y": 500,
        "wires": []
    },
    {
        "id": "fb4f3230d15c6c9d",
        "type": "comment",
        "z": "da1da3acd2b01b0a",
        "name": "Conditions",
        "info": "",
        "x": 420,
        "y": 500,
        "wires": []
    },
    {
        "id": "60034b3c62b9e99d",
        "type": "comment",
        "z": "da1da3acd2b01b0a",
        "name": "Outputs",
        "info": "",
        "x": 810,
        "y": 500,
        "wires": []
    },
    {
        "id": "d12ac0647e301c77",
        "type": "inject",
        "z": "da1da3acd2b01b0a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "input",
        "payload": "1",
        "payloadType": "num",
        "x": 210,
        "y": 260,
        "wires": [
            [
                "8b2f203309471ee9"
            ]
        ]
    },
    {
        "id": "649b2cdc6fb16c7f",
        "type": "inject",
        "z": "da1da3acd2b01b0a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "input",
        "payload": "0",
        "payloadType": "num",
        "x": 210,
        "y": 300,
        "wires": [
            [
                "8b2f203309471ee9"
            ]
        ]
    },
    {
        "id": "d1df1aa8ce41f000",
        "type": "inject",
        "z": "da1da3acd2b01b0a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "input",
        "payload": "1",
        "payloadType": "num",
        "x": 210,
        "y": 100,
        "wires": [
            [
                "7d52ab25d3c33d71"
            ]
        ]
    },
    {
        "id": "506b3a19b64dba70",
        "type": "inject",
        "z": "da1da3acd2b01b0a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "input",
        "payload": "0",
        "payloadType": "num",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "7d52ab25d3c33d71"
            ]
        ]
    },
    {
        "id": "99b70101db01b2da",
        "type": "inject",
        "z": "da1da3acd2b01b0a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "input",
        "payload": "1",
        "payloadType": "num",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "579946f2235cdbcd"
            ]
        ]
    },
    {
        "id": "30f39e69a294b12a",
        "type": "inject",
        "z": "da1da3acd2b01b0a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "input",
        "payload": "0",
        "payloadType": "num",
        "x": 210,
        "y": 220,
        "wires": [
            [
                "579946f2235cdbcd"
            ]
        ]
    },
    {
        "id": "412cd87458afe32b",
        "type": "debug",
        "z": "da1da3acd2b01b0a",
        "name": "cond in",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 220,
        "wires": []
    },
    {
        "id": "480b1bdc2f726bf0",
        "type": "debug",
        "z": "da1da3acd2b01b0a",
        "name": "state in",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 280,
        "wires": []
    },
    {
        "id": "5089e97d12b9244a",
        "type": "debug",
        "z": "da1da3acd2b01b0a",
        "name": "state out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 280,
        "wires": []
    },
    {
        "id": "9dbe8f06056e966e",
        "type": "debug",
        "z": "da1da3acd2b01b0a",
        "name": "outputs",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 280,
        "wires": []
    }
]